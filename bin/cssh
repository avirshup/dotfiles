#!/bin/bash
# From https://superuser.com/a/316376/778483
 
if [ "$2" ]; then
    exec ssh $*
fi
 
hostspec=$1
host=$(echo $hostspec | sed -e 's/^.*@//' -e 's/\..*$//')


function convert_color() {
    python -c "numbers=map(int, '${1}'.split(',')); print(', '.join(map(lambda x:str(x*256), numbers)))"
}

# AMV MOD - uses 0-255 color scales, not 0-65535
# The default opacity value if not specified (0-65535)
#default_opacity=255
 
# The default color which will be used when not connected to any host.
default_color=$(convert_color "0,32,41")  # , $default_opacity"
 


case "${host:0:1}" in
### Add matching host cases here:
# separate with only comma, no spaces
    m) host_color=$(convert_color "0,12,44");;
    b) host_color=$(convert_color "66,11,16");;
    j) host_color=$(convert_color "66,45,13");;
    *) host_color=$(convert_color "0,41,22");;

########################################################################
 
    *)  # Compute default color based on first three letters of hostname
    declare -a cols
#    cols=($(echo -ne ${host/[a-z]*@//} | tr 'A-Z' 'a-z' | tr -cd 'a-z' | \
#            od -t d1 | head -n1 | cut -c10-22));
    host_color=$(perl -e '
          $DARKNESS = 4;
          $host = $ARGV[0];
          while ($host =~ /(.)/g) { $seed += ord($1) };
          srand($seed); 
          for (1..3) { 
              $c = int(rand() * 65535);
              if ($c > (65535/$DARKNESS)) {
                  $c = $c / $DARKNESS
              }
              push @colors, $c; 
          };
          print join (", ", @colors);
      ' $host)
    ;;
esac
 
window_name="${host}_SSH_$$"
 
trap cleanup 1 2 3 6
 
function cleanup() {
    set_color "$default_color"
    echo -ne "\033]0;\007"
}
 
function set_color() {
    case "$TERM_PROGRAM" in
    Apple_Terminal)
        echo -ne "\033]0;${window_name}\007"
        osascript -e 'tell application "Terminal" to tell (first window whose name contains "'${window_name}'") to set background color to {'"$1"'}'
        ;;
    iTerm.app)
        osascript -e 'tell application "iTerm" to set background color of (current session of current terminal) to {'"$1"'}'
        ;;
    esac
}

 
set_color "$host_color"
LOCAL_TERMCOLOR="$host_color" ssh -o SendEnv=LOCAL_TERMCOLOR $hostspec
cleanup
